{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lekha\\\\Documents\\\\Documents\\\\Mathew\\\\Bootcamp\\\\classRepo\\\\Final Project\\\\Final Project 1\\\\src\\\\components\\\\Section.js\";\nimport React from \"react\";\nimport \"../styles/Section.css\"; // By importing the Section.css file, it is added to the DOM whenever this component loads\n// We can also style a component inside of its JavaScript file by adding style properties to its rendered elements\n// Unlike regular HTML, a JSX style property must be an object instead of a string\n// On a style object, we camelCase all property names, and put all of the values in quotes\n// Non quoted values default to \"pixels\", e.g. height, margin, padding\n\nconst styles = {\n  sectionStyles: {\n    background: \"#f0f5cb\"\n  }\n}; // We use JSX curly braces to evaluate the style object on the JSX tag\n\nfunction Section() {\n  return /*#__PURE__*/React.createElement(\"section\", {\n    style: styles.sectionStyles,\n    className: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"Welcome Note.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Section;","map":{"version":3,"sources":["C:/Users/lekha/Documents/Documents/Mathew/Bootcamp/classRepo/Final Project/Final Project 1/src/components/Section.js"],"names":["React","styles","sectionStyles","background","Section"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP,C,CAEA;AAEA;AACA;AACA;AACA;;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,aAAa,EAAE;AACbC,IAAAA,UAAU,EAAE;AADC;AADF,CAAf,C,CAMA;;AAEA,SAASC,OAAT,GAAmB;AACjB,sBACE;AAAS,IAAA,KAAK,EAAEH,MAAM,CAACC,aAAvB;AAAsC,IAAA,SAAS,EAAC,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAYD;;AAED,eAAeE,OAAf","sourcesContent":["import React from \"react\";\nimport \"../styles/Section.css\";\n\n// By importing the Section.css file, it is added to the DOM whenever this component loads\n\n// We can also style a component inside of its JavaScript file by adding style properties to its rendered elements\n// Unlike regular HTML, a JSX style property must be an object instead of a string\n// On a style object, we camelCase all property names, and put all of the values in quotes\n// Non quoted values default to \"pixels\", e.g. height, margin, padding\n\nconst styles = {\n  sectionStyles: {\n    background: \"#f0f5cb\"\n  }\n};\n\n// We use JSX curly braces to evaluate the style object on the JSX tag\n\nfunction Section() {\n  return (\n    <section style={styles.sectionStyles} className=\"section\">\n      <h2>Welcome Note.</h2>\n      <p>\n          </p>\n      <p>\n         </p>\n      <p>\n      \n      </p>\n    </section>\n  );\n}\n\nexport default Section;\n"]},"metadata":{},"sourceType":"module"}