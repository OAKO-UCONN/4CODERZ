{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lekha\\\\Documents\\\\Documents\\\\Mathew\\\\Bootcamp\\\\classRepo\\\\Final Project\\\\4CODERZ - Copy\\\\src\\\\components\\\\Section1.js\";\nimport React from \"react\";\nimport \"../styles/Section1.css\";\n\nfunction Section1() {\n  /*\n   * Components\n   */\n  var ContactForm = React.createClass({\n    displayName: \"ContactForm\",\n    propTypes: {\n      value: React.PropTypes.object.isRequired,\n      onChange: React.PropTypes.func.isRequired,\n      onSubmit: React.PropTypes.func.isRequired\n    },\n    onNameChange: function (e) {\n      this.props.onChange(Object.assign({}, this.props.value, {\n        name: e.target.value\n      }));\n    },\n    onEmailChange: function (e) {\n      this.props.onChange(Object.assign({}, this.props.value, {\n        email: e.target.value\n      }));\n    },\n    onDescriptionChange: function (e) {\n      this.props.onChange(Object.assign({}, this.props.value, {\n        description: e.target.value\n      }));\n    },\n    onSubmit: function (e) {\n      e.preventDefault();\n      this.props.onSubmit();\n    },\n    render: function () {\n      var errors = this.props.value.errors || {};\n      return React.createElement('form', {\n        onSubmit: this.onSubmit,\n        className: 'ContactForm',\n        noValidate: true\n      }, React.createElement('input', {\n        type: 'text',\n        className: errors.name && 'ContactForm-error',\n        placeholder: 'Name (required)',\n        value: this.props.value.name,\n        onChange: this.onNameChange\n      }), React.createElement('input', {\n        type: 'email',\n        className: errors.email && 'ContactForm-error',\n        placeholder: 'Email (required)',\n        value: this.props.value.email,\n        onChange: this.onEmailChange\n      }), React.createElement('textarea', {\n        placeholder: 'Description',\n        value: this.props.value.description,\n        onChange: this.onDescriptionChange\n      }), React.createElement('button', {\n        type: 'submit',\n        className: \"btn btn-info\"\n      }, \"Add Contact\"));\n    }\n  });\n  var ContactItem = React.createClass({\n    displayName: \"ContactItem\",\n    propTypes: {\n      name: React.PropTypes.string.isRequired,\n      email: React.PropTypes.string.isRequired,\n      description: React.PropTypes.string\n    },\n    render: function () {\n      return React.createElement('li', {\n        className: 'ContactItem'\n      }, React.createElement('h2', {\n        className: 'ContactItem-name'\n      }, this.props.name), React.createElement('a', {\n        className: 'ContactItem-email',\n        href: 'mailto:' + this.props.email\n      }, this.props.email), React.createElement('div', {\n        className: 'ContactItem-description'\n      }, this.props.description));\n    }\n  });\n  var ContactView = React.createClass({\n    displayName: \"ContactView\",\n    propTypes: {\n      contacts: React.PropTypes.array.isRequired,\n      newContact: React.PropTypes.object.isRequired,\n      onNewContactChange: React.PropTypes.func.isRequired,\n      onNewContactSubmit: React.PropTypes.func.isRequired\n    },\n    render: function () {\n      var contactItemElements = this.props.contacts.filter(function (contact) {\n        return contact.email;\n      }).map(function (contact) {\n        return React.createElement(ContactItem, contact);\n      });\n      return React.createElement('div', {\n        className: 'ContactView'\n      }, React.createElement('h1', {\n        className: 'ContactView-title'\n      }, \"Contacts\"), React.createElement('ul', {\n        className: 'ContactView-list'\n      }, contactItemElements), React.createElement(ContactForm, {\n        value: this.props.newContact,\n        onChange: this.props.onNewContactChange,\n        onSubmit: this.props.onNewContactSubmit\n      }));\n    }\n  });\n  /*\n   * Constants\n   */\n\n  var CONTACT_TEMPLATE = {\n    name: \"\",\n    email: \"\",\n    description: \"\",\n    errors: null\n  };\n  /*\n   * Actions\n   */\n\n  function updateNewContact(contact) {\n    setState({\n      newContact: contact\n    });\n  }\n\n  function submitNewContact() {\n    var contact = Object.assign({}, state.newContact, {\n      key: state.contacts.length + 1,\n      errors: {}\n    });\n\n    if (!contact.name) {\n      contact.errors.name = [\"Please enter your new contact's name\"];\n    }\n\n    if (!/.+@.+\\..+/.test(contact.email)) {\n      contact.errors.email = [\"Please enter your new contact's email\"];\n    }\n\n    setState(Object.keys(contact.errors).length === 0 ? {\n      newContact: Object.assign({}, CONTACT_TEMPLATE),\n      contacts: state.contacts.slice(0).concat(contact)\n    } : {\n      newContact: contact\n    });\n  }\n  /*\n   * Model\n   */\n  // The app's complete current state\n\n\n  var state = {}; // Make the given changes to the state and perform any required housekeeping\n\n  function setState(changes) {\n    Object.assign(state, changes);\n    ReactDOM.render(React.createElement(ContactView, Object.assign({}, state, {\n      onNewContactChange: updateNewContact,\n      onNewContactSubmit: submitNewContact\n    })), document.getElementById('react-app'));\n  } // Set initial data\n\n\n  setState({\n    contacts: [{\n      key: 1,\n      name: \"James K Nelson\",\n      email: \"james@jamesknelson.com\",\n      description: \"Front-end Unicorn\"\n    }, {\n      key: 2,\n      name: \"Jim\",\n      email: \"jim@example.com\"\n    }],\n    newContact: Object.assign({}, CONTACT_TEMPLATE)\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"react-app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 1\n    }\n  });\n}\n\nexport default Section1;","map":{"version":3,"sources":["C:/Users/lekha/Documents/Documents/Mathew/Bootcamp/classRepo/Final Project/4CODERZ - Copy/src/components/Section1.js"],"names":["React","Section1","ContactForm","createClass","propTypes","value","PropTypes","object","isRequired","onChange","func","onSubmit","onNameChange","e","props","Object","assign","name","target","onEmailChange","email","onDescriptionChange","description","preventDefault","render","errors","createElement","className","noValidate","type","placeholder","ContactItem","string","href","ContactView","contacts","array","newContact","onNewContactChange","onNewContactSubmit","contactItemElements","filter","contact","map","CONTACT_TEMPLATE","updateNewContact","setState","submitNewContact","state","key","length","test","keys","slice","concat","changes","ReactDOM","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;;AAKA,SAASC,QAAT,GAAoB;AAEpB;;;AAIA,MAAIC,WAAW,GAAGF,KAAK,CAACG,WAAN,CAAkB;AAAA;AAClCC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAEL,KAAK,CAACM,SAAN,CAAgBC,MAAhB,CAAuBC,UADrB;AAETC,MAAAA,QAAQ,EAAET,KAAK,CAACM,SAAN,CAAgBI,IAAhB,CAAqBF,UAFtB;AAGTG,MAAAA,QAAQ,EAAEX,KAAK,CAACM,SAAN,CAAgBI,IAAhB,CAAqBF;AAHtB,KADuB;AAOlCI,IAAAA,YAAY,EAAE,UAASC,CAAT,EAAY;AACxB,WAAKC,KAAL,CAAWL,QAAX,CAAoBM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKF,KAAL,CAAWT,KAA7B,EAAoC;AAACY,QAAAA,IAAI,EAAEJ,CAAC,CAACK,MAAF,CAASb;AAAhB,OAApC,CAApB;AACD,KATiC;AAWlCc,IAAAA,aAAa,EAAE,UAASN,CAAT,EAAY;AACzB,WAAKC,KAAL,CAAWL,QAAX,CAAoBM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKF,KAAL,CAAWT,KAA7B,EAAoC;AAACe,QAAAA,KAAK,EAAEP,CAAC,CAACK,MAAF,CAASb;AAAjB,OAApC,CAApB;AACD,KAbiC;AAelCgB,IAAAA,mBAAmB,EAAE,UAASR,CAAT,EAAY;AAC/B,WAAKC,KAAL,CAAWL,QAAX,CAAoBM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKF,KAAL,CAAWT,KAA7B,EAAoC;AAACiB,QAAAA,WAAW,EAAET,CAAC,CAACK,MAAF,CAASb;AAAvB,OAApC,CAApB;AACD,KAjBiC;AAmBlCM,IAAAA,QAAQ,EAAE,UAASE,CAAT,EAAY;AACpBA,MAAAA,CAAC,CAACU,cAAF;AACA,WAAKT,KAAL,CAAWH,QAAX;AACD,KAtBiC;AAwBlCa,IAAAA,MAAM,EAAE,YAAW;AACjB,UAAIC,MAAM,GAAG,KAAKX,KAAL,CAAWT,KAAX,CAAiBoB,MAAjB,IAA2B,EAAxC;AAEA,aACEzB,KAAK,CAAC0B,aAAN,CAAoB,MAApB,EAA4B;AAACf,QAAAA,QAAQ,EAAE,KAAKA,QAAhB;AAA0BgB,QAAAA,SAAS,EAAE,aAArC;AAAoDC,QAAAA,UAAU,EAAE;AAAhE,OAA5B,EACE5B,KAAK,CAAC0B,aAAN,CAAoB,OAApB,EAA6B;AAC3BG,QAAAA,IAAI,EAAE,MADqB;AAE3BF,QAAAA,SAAS,EAAEF,MAAM,CAACR,IAAP,IAAe,mBAFC;AAG3Ba,QAAAA,WAAW,EAAE,iBAHc;AAI3BzB,QAAAA,KAAK,EAAE,KAAKS,KAAL,CAAWT,KAAX,CAAiBY,IAJG;AAK3BR,QAAAA,QAAQ,EAAE,KAAKG;AALY,OAA7B,CADF,EAQEZ,KAAK,CAAC0B,aAAN,CAAoB,OAApB,EAA6B;AAC3BG,QAAAA,IAAI,EAAE,OADqB;AAE3BF,QAAAA,SAAS,EAAEF,MAAM,CAACL,KAAP,IAAgB,mBAFA;AAG3BU,QAAAA,WAAW,EAAE,kBAHc;AAI3BzB,QAAAA,KAAK,EAAE,KAAKS,KAAL,CAAWT,KAAX,CAAiBe,KAJG;AAK3BX,QAAAA,QAAQ,EAAE,KAAKU;AALY,OAA7B,CARF,EAeEnB,KAAK,CAAC0B,aAAN,CAAoB,UAApB,EAAgC;AAC9BI,QAAAA,WAAW,EAAE,aADiB;AAE9BzB,QAAAA,KAAK,EAAE,KAAKS,KAAL,CAAWT,KAAX,CAAiBiB,WAFM;AAG9Bb,QAAAA,QAAQ,EAAE,KAAKY;AAHe,OAAhC,CAfF,EAoBErB,KAAK,CAAC0B,aAAN,CAAoB,QAApB,EAA8B;AAACG,QAAAA,IAAI,EAAE,QAAP;AAAiBF,QAAAA,SAAS,EAAE;AAA5B,OAA9B,EAA2E,aAA3E,CApBF,CADF;AAwBD;AAnDiC,GAAlB,CAAlB;AAuDA,MAAII,WAAW,GAAG/B,KAAK,CAACG,WAAN,CAAkB;AAAA;AAClCC,IAAAA,SAAS,EAAE;AACTa,MAAAA,IAAI,EAAEjB,KAAK,CAACM,SAAN,CAAgB0B,MAAhB,CAAuBxB,UADpB;AAETY,MAAAA,KAAK,EAAEpB,KAAK,CAACM,SAAN,CAAgB0B,MAAhB,CAAuBxB,UAFrB;AAGTc,MAAAA,WAAW,EAAEtB,KAAK,CAACM,SAAN,CAAgB0B;AAHpB,KADuB;AAOlCR,IAAAA,MAAM,EAAE,YAAW;AACjB,aACExB,KAAK,CAAC0B,aAAN,CAAoB,IAApB,EAA0B;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAA1B,EACE3B,KAAK,CAAC0B,aAAN,CAAoB,IAApB,EAA0B;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAA1B,EAA2D,KAAKb,KAAL,CAAWG,IAAtE,CADF,EAEEjB,KAAK,CAAC0B,aAAN,CAAoB,GAApB,EAAyB;AAACC,QAAAA,SAAS,EAAE,mBAAZ;AAAiCM,QAAAA,IAAI,EAAE,YAAU,KAAKnB,KAAL,CAAWM;AAA5D,OAAzB,EAA6F,KAAKN,KAAL,CAAWM,KAAxG,CAFF,EAGEpB,KAAK,CAAC0B,aAAN,CAAoB,KAApB,EAA2B;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAA3B,EAAmE,KAAKb,KAAL,CAAWQ,WAA9E,CAHF,CADF;AAOD;AAfiC,GAAlB,CAAlB;AAmBA,MAAIY,WAAW,GAAGlC,KAAK,CAACG,WAAN,CAAkB;AAAA;AAClCC,IAAAA,SAAS,EAAE;AACT+B,MAAAA,QAAQ,EAAEnC,KAAK,CAACM,SAAN,CAAgB8B,KAAhB,CAAsB5B,UADvB;AAET6B,MAAAA,UAAU,EAAErC,KAAK,CAACM,SAAN,CAAgBC,MAAhB,CAAuBC,UAF1B;AAGT8B,MAAAA,kBAAkB,EAAEtC,KAAK,CAACM,SAAN,CAAgBI,IAAhB,CAAqBF,UAHhC;AAIT+B,MAAAA,kBAAkB,EAAEvC,KAAK,CAACM,SAAN,CAAgBI,IAAhB,CAAqBF;AAJhC,KADuB;AAQlCgB,IAAAA,MAAM,EAAE,YAAW;AACjB,UAAIgB,mBAAmB,GAAG,KAAK1B,KAAL,CAAWqB,QAAX,CACvBM,MADuB,CAChB,UAASC,OAAT,EAAkB;AAAE,eAAOA,OAAO,CAACtB,KAAf;AAAuB,OAD3B,EAEvBuB,GAFuB,CAEnB,UAASD,OAAT,EAAkB;AAAE,eAAO1C,KAAK,CAAC0B,aAAN,CAAoBK,WAApB,EAAiCW,OAAjC,CAAP;AAAmD,OAFpD,CAA1B;AAIA,aACE1C,KAAK,CAAC0B,aAAN,CAAoB,KAApB,EAA2B;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAA3B,EACE3B,KAAK,CAAC0B,aAAN,CAAoB,IAApB,EAA0B;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAA1B,EAA4D,UAA5D,CADF,EAEE3B,KAAK,CAAC0B,aAAN,CAAoB,IAApB,EAA0B;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAA1B,EAA2Da,mBAA3D,CAFF,EAGExC,KAAK,CAAC0B,aAAN,CAAoBxB,WAApB,EAAiC;AAC/BG,QAAAA,KAAK,EAAE,KAAKS,KAAL,CAAWuB,UADa;AAE/B5B,QAAAA,QAAQ,EAAE,KAAKK,KAAL,CAAWwB,kBAFU;AAG/B3B,QAAAA,QAAQ,EAAE,KAAKG,KAAL,CAAWyB;AAHU,OAAjC,CAHF,CADF;AAWD;AAxBiC,GAAlB,CAAlB;AA4BA;;;;AAKA,MAAIK,gBAAgB,GAAG;AAAC3B,IAAAA,IAAI,EAAE,EAAP;AAAWG,IAAAA,KAAK,EAAE,EAAlB;AAAsBE,IAAAA,WAAW,EAAE,EAAnC;AAAuCG,IAAAA,MAAM,EAAE;AAA/C,GAAvB;AAIA;;;;AAKA,WAASoB,gBAAT,CAA0BH,OAA1B,EAAmC;AACjCI,IAAAA,QAAQ,CAAC;AAAET,MAAAA,UAAU,EAAEK;AAAd,KAAD,CAAR;AACD;;AAGD,WAASK,gBAAT,GAA4B;AAC1B,QAAIL,OAAO,GAAG3B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBgC,KAAK,CAACX,UAAxB,EAAoC;AAACY,MAAAA,GAAG,EAAED,KAAK,CAACb,QAAN,CAAee,MAAf,GAAwB,CAA9B;AAAiCzB,MAAAA,MAAM,EAAE;AAAzC,KAApC,CAAd;;AAEA,QAAI,CAACiB,OAAO,CAACzB,IAAb,EAAmB;AACjByB,MAAAA,OAAO,CAACjB,MAAR,CAAeR,IAAf,GAAsB,CAAC,sCAAD,CAAtB;AACD;;AACD,QAAI,CAAC,YAAYkC,IAAZ,CAAiBT,OAAO,CAACtB,KAAzB,CAAL,EAAsC;AACpCsB,MAAAA,OAAO,CAACjB,MAAR,CAAeL,KAAf,GAAuB,CAAC,uCAAD,CAAvB;AACD;;AAED0B,IAAAA,QAAQ,CACN/B,MAAM,CAACqC,IAAP,CAAYV,OAAO,CAACjB,MAApB,EAA4ByB,MAA5B,KAAuC,CAAvC,GAA2C;AACvCb,MAAAA,UAAU,EAAEtB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB4B,gBAAlB,CAD2B;AAEvCT,MAAAA,QAAQ,EAAEa,KAAK,CAACb,QAAN,CAAekB,KAAf,CAAqB,CAArB,EAAwBC,MAAxB,CAA+BZ,OAA/B;AAF6B,KAA3C,GAIE;AAAEL,MAAAA,UAAU,EAAEK;AAAd,KALI,CAAR;AAOD;AAGD;;;AAKA;;;AACA,MAAIM,KAAK,GAAG,EAAZ,CAzJoB,CA2JpB;;AACA,WAASF,QAAT,CAAkBS,OAAlB,EAA2B;AACzBxC,IAAAA,MAAM,CAACC,MAAP,CAAcgC,KAAd,EAAqBO,OAArB;AAEAC,IAAAA,QAAQ,CAAChC,MAAT,CACExB,KAAK,CAAC0B,aAAN,CAAoBQ,WAApB,EAAiCnB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBgC,KAAlB,EAAyB;AACxDV,MAAAA,kBAAkB,EAAEO,gBADoC;AAExDN,MAAAA,kBAAkB,EAAEQ;AAFoC,KAAzB,CAAjC,CADF,EAKEU,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CALF;AAOD,GAtKmB,CAwKpB;;;AACAZ,EAAAA,QAAQ,CAAC;AACPX,IAAAA,QAAQ,EAAE,CACR;AAACc,MAAAA,GAAG,EAAE,CAAN;AAAShC,MAAAA,IAAI,EAAE,gBAAf;AAAiCG,MAAAA,KAAK,EAAE,wBAAxC;AAAkEE,MAAAA,WAAW,EAAE;AAA/E,KADQ,EAER;AAAC2B,MAAAA,GAAG,EAAE,CAAN;AAAShC,MAAAA,IAAI,EAAE,KAAf;AAAsBG,MAAAA,KAAK,EAAE;AAA7B,KAFQ,CADH;AAKPiB,IAAAA,UAAU,EAAEtB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB4B,gBAAlB;AALL,GAAD,CAAR;AASE,sBAGF;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHE;AAMD;;AAED,eAAe3C,QAAf","sourcesContent":["import React from \"react\";\nimport \"../styles/Section1.css\";\n\n\n\n\nfunction Section1() {\n\n/*\n * Components\n */\n\nvar ContactForm = React.createClass({\n  propTypes: {\n    value: React.PropTypes.object.isRequired,\n    onChange: React.PropTypes.func.isRequired,\n    onSubmit: React.PropTypes.func.isRequired\n  },\n  \n  onNameChange: function(e) {\n    this.props.onChange(Object.assign({}, this.props.value, {name: e.target.value}));\n  },\n  \n  onEmailChange: function(e) {\n    this.props.onChange(Object.assign({}, this.props.value, {email: e.target.value}));\n  },\n  \n  onDescriptionChange: function(e) {\n    this.props.onChange(Object.assign({}, this.props.value, {description: e.target.value}));\n  },\n\n  onSubmit: function(e) {\n    e.preventDefault();\n    this.props.onSubmit();\n  },\n\n  render: function() {\n    var errors = this.props.value.errors || {};\n\n    return (\n      React.createElement('form', {onSubmit: this.onSubmit, className: 'ContactForm', noValidate: true},\n        React.createElement('input', {\n          type: 'text',\n          className: errors.name && 'ContactForm-error',\n          placeholder: 'Name (required)',\n          value: this.props.value.name,\n          onChange: this.onNameChange,\n        }),\n        React.createElement('input', {\n          type: 'email',\n          className: errors.email && 'ContactForm-error',\n          placeholder: 'Email (required)',\n          value: this.props.value.email,\n          onChange: this.onEmailChange,\n        }),\n        React.createElement('textarea', {\n          placeholder: 'Description',\n          value: this.props.value.description,\n          onChange: this.onDescriptionChange,\n        }),\n        React.createElement('button', {type: 'submit', className: \"btn btn-info\"}, \"Add Contact\")\n      )\n    );\n  },\n});\n\n\nvar ContactItem = React.createClass({\n  propTypes: {\n    name: React.PropTypes.string.isRequired,\n    email: React.PropTypes.string.isRequired,\n    description: React.PropTypes.string,\n  },\n\n  render: function() {\n    return (\n      React.createElement('li', {className: 'ContactItem'},\n        React.createElement('h2', {className: 'ContactItem-name'}, this.props.name),\n        React.createElement('a', {className: 'ContactItem-email', href: 'mailto:'+this.props.email}, this.props.email),\n        React.createElement('div', {className: 'ContactItem-description'}, this.props.description)\n      )\n    );\n  },\n});\n\n\nvar ContactView = React.createClass({\n  propTypes: {\n    contacts: React.PropTypes.array.isRequired,\n    newContact: React.PropTypes.object.isRequired,\n    onNewContactChange: React.PropTypes.func.isRequired,\n    onNewContactSubmit: React.PropTypes.func.isRequired,\n  },\n\n  render: function() {\n    var contactItemElements = this.props.contacts\n      .filter(function(contact) { return contact.email; })\n      .map(function(contact) { return React.createElement(ContactItem, contact); });\n\n    return (\n      React.createElement('div', {className: 'ContactView'},\n        React.createElement('h1', {className: 'ContactView-title'}, \"Contacts\"),\n        React.createElement('ul', {className: 'ContactView-list'}, contactItemElements),\n        React.createElement(ContactForm, {\n          value: this.props.newContact,\n          onChange: this.props.onNewContactChange,\n          onSubmit: this.props.onNewContactSubmit,\n        })\n      )\n    );\n  },\n});\n\n\n/*\n * Constants\n */\n\n\nvar CONTACT_TEMPLATE = {name: \"\", email: \"\", description: \"\", errors: null};\n\n\n\n/*\n * Actions\n */\n\n\nfunction updateNewContact(contact) {\n  setState({ newContact: contact });\n}\n\n\nfunction submitNewContact() {\n  var contact = Object.assign({}, state.newContact, {key: state.contacts.length + 1, errors: {}});\n  \n  if (!contact.name) {\n    contact.errors.name = [\"Please enter your new contact's name\"];\n  }\n  if (!/.+@.+\\..+/.test(contact.email)) {\n    contact.errors.email = [\"Please enter your new contact's email\"];\n  }\n\n  setState(\n    Object.keys(contact.errors).length === 0 ? {\n        newContact: Object.assign({}, CONTACT_TEMPLATE),\n        contacts: state.contacts.slice(0).concat(contact),\n      }\n    : { newContact: contact }\n  );\n}\n\n\n/*\n * Model\n */\n\n\n// The app's complete current state\nvar state = {};\n\n// Make the given changes to the state and perform any required housekeeping\nfunction setState(changes) {\n  Object.assign(state, changes);\n  \n  ReactDOM.render(\n    React.createElement(ContactView, Object.assign({}, state, {\n      onNewContactChange: updateNewContact,\n      onNewContactSubmit: submitNewContact,\n    })),\n    document.getElementById('react-app')\n  );\n}\n\n// Set initial data\nsetState({\n  contacts: [\n    {key: 1, name: \"James K Nelson\", email: \"james@jamesknelson.com\", description: \"Front-end Unicorn\"},\n    {key: 2, name: \"Jim\", email: \"jim@example.com\"},\n  ],\n  newContact: Object.assign({}, CONTACT_TEMPLATE),\n});\n\n\n  return (\n\n \n<div id=\"react-app\"></div>\n\n  );\n}\n\nexport default Section1;\n"]},"metadata":{},"sourceType":"module"}